var m=Object.defineProperty;var u=(n,t,s)=>t in n?m(n,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[t]=s;var o=(n,t,s)=>u(n,typeof t!="symbol"?t+"":t,s);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&a(r)}).observe(document,{childList:!0,subtree:!0});function s(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function a(e){if(e.ep)return;e.ep=!0;const i=s(e);fetch(e.href,i)}})();class h{constructor(){o(this,"camera",{azimuth:Math.PI/6,elevation:Math.PI/7,distance:1,panX:0,panY:0});o(this,"orbitWrapper",null);o(this,"dragMode",null);o(this,"activePointerId",null);o(this,"dragStart",{x:0,y:0,azimuth:0,elevation:0,panX:0,panY:0})}mount(t){t.innerHTML="";const{container:s,orbitWrapper:a}=this.createScene();this.orbitWrapper=a,t.appendChild(s),this.updateCameraTransform(),this.attachControls(s)}createScene(){const t=document.createElement("div");t.className="scene-container";const s=document.createElement("div");s.className="orbit-wrapper";const a=this.createAxes(),e=document.createElement("div");e.className="galaxy-disc",e.setAttribute("role","img"),e.setAttribute("aria-label","Simulated galaxy disc preview");const i=document.createElement("div");i.className="galaxy-halo";const r=document.createElement("div");r.className="galaxy-core";const l=document.createElement("div");return l.className="galaxy-dust",e.appendChild(i),e.appendChild(r),e.appendChild(l),s.appendChild(a),s.appendChild(e),t.appendChild(s),{container:t,orbitWrapper:s}}attachControls(t){t.addEventListener("pointerdown",a=>{var i;let e=null;a.button===0&&a.altKey?e="pan":a.button===0?e="orbit":(a.button===1||a.button===2)&&(e="pan"),e&&(this.dragMode=e,this.activePointerId=a.pointerId,(i=t.setPointerCapture)==null||i.call(t,a.pointerId),this.dragStart={x:a.clientX,y:a.clientY,azimuth:this.camera.azimuth,elevation:this.camera.elevation,panX:this.camera.panX,panY:this.camera.panY},e==="orbit"?t.classList.add("is-orbiting"):e==="pan"&&t.classList.add("is-panning"))}),t.addEventListener("pointermove",a=>{if(!this.dragMode||a.pointerId!==this.activePointerId)return;const e=a.clientX-this.dragStart.x,i=a.clientY-this.dragStart.y;if(this.dragMode==="orbit"){this.camera.azimuth=this.dragStart.azimuth+e*.005;const p=this.dragStart.elevation+i*.004,d=Math.PI/2-.05;this.camera.elevation=Math.min(d,Math.max(-d,p))}else this.dragMode==="pan"&&(this.camera.panX=this.dragStart.panX+e*.8,this.camera.panY=this.dragStart.panY+i*.8);this.updateCameraTransform()});const s=a=>{var e;a&&this.activePointerId!==null&&a.pointerId===this.activePointerId&&((e=t.releasePointerCapture)==null||e.call(t,this.activePointerId)),this.activePointerId=null,this.dragMode=null,t.classList.remove("is-orbiting","is-panning")};t.addEventListener("pointerup",s),t.addEventListener("pointercancel",s),t.addEventListener("lostpointercapture",s),t.addEventListener("wheel",a=>{a.preventDefault();const i=this.camera.distance-a.deltaY*.0018;this.camera.distance=Math.min(2.5,Math.max(.4,i)),this.updateCameraTransform()},{passive:!1}),t.addEventListener("contextmenu",a=>{a.preventDefault()})}updateCameraTransform(){if(!this.orbitWrapper)return;const{azimuth:t,elevation:s,distance:a,panX:e,panY:i}=this.camera,r=[`translate3d(${e}px, ${i}px, 0)`,`rotateX(${s}rad)`,`rotateY(${t}rad)`,`scale(${a})`].join(" ");this.orbitWrapper.style.transform=r}createAxes(){const t=document.createElement("div");t.className="axis-group";const s=[{className:"axis-y",label:"Y"},{className:"axis-x",label:"X"},{className:"axis-z",label:"Z"}];for(const a of s){const e=document.createElement("div");e.className=`axis ${a.className}`,e.dataset.label=a.label,t.appendChild(e)}return t}}const c=document.getElementById("app");if(!c)throw new Error("Root element #app not found in document.");const f=new h;f.mount(c);console.log("NettySimulation ready");
